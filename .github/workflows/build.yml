name: SonarQube and Deploy
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
      GOOGLE_CALENDAR_CREDENTIALS: ${{ secrets.CALENDAR }}
      REDIRECT_URI_LOCAL: "http://localhost:8080/Callback" # Defined with a different name
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Test with Gradle
        env:
          GOOGLE_CALENDAR_CREDENTIALS: ${{ secrets.CALENDAR }}
          SPRING_PROFILES_ACTIVE: dev # Activate the 'dev' profile during tests
          REDIRECT_URI_SYSTEM_PROP: ${{ env.REDIRECT_URI_LOCAL }} # Pass as another env var
        run: ./gradlew test -Dredirect.uri=${{ env.REDIRECT_URI_SYSTEM_PROP }}

      - name: Cache SonarQube packages
        if: github.event_name != 'workflow_dispatch'
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build env for SonaQube and analyze
        if: github.event_name != 'workflow_dispatch'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

  deploy:
    name: Deploy to Google Cloud
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate app.yaml
        run: |
          echo "" >> app.yaml
          echo "env_variables:" >> app.yaml
          echo "  SPRING_PROFILES_ACTIVE: prod" >> app.yaml
          echo "  SPRING_DATASOURCE_URL: '${{ secrets.SPRING_DATASOURCE_URL }}'" >> app.yaml
          echo "  SPRING_DATASOURCE_USERNAME: '${{ secrets.SPRING_DATASOURCE_USERNAME }}'" >> app.yaml
          echo "  SPRING_DATASOURCE_PASSWORD: '${{ secrets.SPRING_DATASOURCE_PASSWORD }}'" >> app.yaml
          echo "  GOOGLE_CALENDAR_CREDENTIALS: '${{ secrets.CALENDAR }}'" >> app.yaml
          echo "  REDIRECT_URI: '${{ secrets.REDIRECT_URI }}'" >> app.yaml
      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          deliverables: app.yaml
          version: v1
          credentials: ${{ secrets.GCP_SERVICE_CREDENTIALS }}
          promote: true

      - name: Test
        run: curl "${{ steps.deploy.outputs.url }}"
