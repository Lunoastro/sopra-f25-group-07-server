name: SonarQube and Deploy
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
jobs:
  build:    
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Replace application-prod.properties with secrets
        run: |
            sed -i 's|^spring.datasource.url=.*|spring.datasource.url=${{ secrets.DB_URL }}|' ./src/main/resources/application-prod.properties
            sed -i 's|^spring.datasource.url=.*|spring.datasource.username=${{ secrets.DB_USERNAME }}|' ./src/main/resources/application-prod.properties
            sed -i 's|^spring.datasource.url=.*|spring.datasource.password=${{ secrets.DB_PASSWORD }}|' ./src/main/resources/application-prod.properties
      - name: Build with Gradle
        run: ./gradlew build

      - name: Test with Gradle
        run: ./gradlew test
      
      - name: Cache SonarQube packages
        if: github.event_name != 'workflow_dispatch'
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    
      - name: Build env for SonaQube and analyze
        if: github.event_name != 'workflow_dispatch'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

  deploy:
    name: Deploy to Google Cloud
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          deliverables: app.yaml
          version: v1
          credentials: ${{ secrets.GCP_SERVICE_CREDENTIALS }}

      - name: Test
        run: curl "${{ steps.deploy.outputs.url }}"
